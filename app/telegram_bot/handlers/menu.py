# app/telegram_bot/handlers/menu.py

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from app.services.user_service import get_active_chat_id, get_user_model
from app.services.chat_service import get_user_chats, get_chat_title

logger = logging.getLogger(__name__)

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    /start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∏–ª–∏ –º–µ–Ω—é.
    """
    text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π Proxy API –¥–ª—è ChatGPT.\n"
        "–ù–∞–∂–º–∏—Ç–µ /menu, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n"
        "–õ–∏–±–æ –æ—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é –±–æ—Ç–∞ (—Å–∏–Ω—è—è –∫–Ω–æ–ø–∫–∞ —Å–ª–µ–≤–∞ –æ—Ç –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞)."
    )
    await update.message.reply_text(text)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    /help - –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Å–ø—Ä–∞–≤–∫–∏.
    """
    text = (
        "‚ùì –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:\n"
        "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äì –±–æ—Ç –æ—Ç–≤–µ—Ç–∏—Ç.\n"
        "2. /menu ‚Äì –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —á–∞—Ç–∞–º–∏, –º–æ–¥–µ–ª—è–º–∏ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏.\n"
        "3. /help ‚Äì —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞.\n"
        "4. /cabinet ‚Äì –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç (–±–∞–ª–∞–Ω—Å –∏ –ø–ª–∞—Ç–µ–∂–∏).\n"
        "5. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é —Å–ª–µ–≤–∞ –æ—Ç –ø–æ–ª—è –≤–≤–æ–¥–∞, –µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è."
    )
    await update.message.reply_text(text)

async def menu_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    /menu ‚Äì –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (inline-–∫–Ω–æ–ø–∫–∏).
    """
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à—ë–ª Update (Message –∏–ª–∏ CallbackQuery)
    if update.message:
        chat_id = update.message.chat.id
    else:
        chat_id = update.callback_query.message.chat.id

    session_factory = context.application.bot_data.get("session_factory")
    if not session_factory:
        logger.error("No session_factory found in bot_data.")
        main_text = (
            "–û—à–∏–±–∫–∞: –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:"
        )
        keyboard = [
            [InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")],
            [InlineKeyboardButton("üè¶ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="show_cabinet")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if update.message:
            await update.message.reply_text(main_text, reply_markup=reply_markup)
        else:
            await update.callback_query.edit_message_text(main_text, reply_markup=reply_markup)
        return

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Ä–≤–∏—Å–∞
    async with session_factory() as session:
        active_id = await get_active_chat_id(session, chat_id)
        model_name = await get_user_model(session, chat_id) or "‚Äî"
        user_chats = await get_user_chats(session, chat_id)
        total_chats = len(user_chats)

        if active_id:
            active_title = await get_chat_title(session, active_id) or f"(ID {active_id})"
        else:
            active_title = "–Ω–µ –≤—ã–±—Ä–∞–Ω"

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –º–µ–Ω—é
    main_text = (
        f"–¢–µ–∫—É—â–∏–π —á–∞—Ç: {active_title}\n"
        f"–ú–æ–¥–µ–ª—å: {model_name}\n"
        f"–í—Å–µ–≥–æ —á–∞—Ç–æ–≤: {total_chats}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:"
    )

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (–ø—Ä–∏–º–µ—Ä: –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥)
    keyboard = [
        [
            InlineKeyboardButton("üìë –í—Å–µ —á–∞—Ç—ã", callback_data="all_chats"),
            InlineKeyboardButton("‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data="favorite_chats"),
        ],
        [
            InlineKeyboardButton("ü§ñ –°–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å", callback_data="change_model"),
            InlineKeyboardButton("üí¨ –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞", callback_data="history_current_chat"),
        ],
        [
            InlineKeyboardButton("üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", callback_data="update_instructions"),
            InlineKeyboardButton("üè¶ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="show_cabinet"),
        ],
        [
            InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º/—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if update.message:
        await update.message.reply_text(main_text, reply_markup=reply_markup)
    else:
        await update.callback_query.edit_message_text(main_text, reply_markup=reply_markup)
